=pod

=head1 NAME

grossd - Greylisting of Suspicious Sources - the Server

=head1 SYNOPSIS

B<grossd> [B<-dCDhnrV>] [B<-f> I<config>]
[{B<-p> | B<-P>} I<pidfile>]

=head1 DESCRIPTION

B<grossd> is a greylisting server, and more. It's blazingly fast and amazingly
resource efficient. It can be configured to query DNSBL
databases, and enforce greylisting only for hosts that are found on those databases.
It can block hosts that match multiple DNSBL's. It can be replicated and
run parallel on two servers. It supports Sun Java System Messaging Server,
Postfix and Exim. Sendmail Milter implementation needs testing. 

=head2 Theory of operation

Gross consists of B<grossd>, the greylisting daemon, and a client library for
SJSMS.  The server also implements Postfix content filtering protocol.

Upon receiving a request from a client, B<grossd> first validates it.
The request includes a triplet (C<smtp-client-ip>, C<sender-address>,
C<recipient-address>).
A hash is then calculated and matched against the Bloom filter. If a
match is found, and test result does not exceed B<block_threshold>
value, B<grossd> sends an OK (STATUS_TRUST) message.

If the triplet has not been seen before, B<grossd> then
runs configured checks against the client information.
Based on check results B<grossd> returns the client 
a result. Possible results are C<STATUS_TRUST>, C<STATUS_BLOCK>
and C<STATUS_GREY>. The final response is query protocol specific.

Then, the Bloom filters are updated according the
B<update> configuration option. A Bloom filter is a
very efficient way to store data. It's a probabilistic data
structure, which means that there is a possibility of error when
querying the database. False positives are possible, but false
negatives are not. This means that there is a possibility
that grossd will falsely give an C<STATUS_TRUST> response when a
connection should be greylisted. By sizing the bloom
filters, you can control the error possibility to meet your
needs. The right bloom filter size depends on the number
of entries in the database, that is, the retention time
versus the number of handled connections.

=head1 OPTIONS

=over 12

=item B<-C>

Create the statefile and exit. The B<statefile> configuration option
must be specified in the configuration file.

=item B<-D>

Make debugging output more verbose. It can be set twice
for maximum verbosity.

=item B<-d>

Run B<grossd> on foreground without daemonizing the process.
B<grossd> will output to terminal instead of using syslog.

=item B<-f> I<config>

Specifies the name of the configuration file. The default is
F<@sysconfdir@/etc/grossd.conf>

=item B<-h>

Output short usage information and exit.

=item B<-n>

Enable dry-run.

=item B<-P> I<pidfile>

Bail out if the pidfile already exists. Create pidfile after the check.

=item B<-p> I<pidfile>

Create the pidfile. Overwrite if it already exists.

=item B<-r>

Disable replication.

=item B<-V>

Output version information and exit.

=back

=head1 FILES

F<@sysconfdir@/grossd.conf>

=head1 SECURITY CONSIDERATIONS

Run B<grossd> under some unprivileged user id. If started as root
B<grossd> will C<setuid()> itself to nobody's user id. There are no
known security flaws but you must not expose B<grossd>
to the Internet. It could be used for a DoS against a domains
DNS servers by an attacker as there is no authentication in grossd.

=head1 DIAGNOSTICS

B<grossd> daemon exits 0 if success, and >0 if an error occurs.

=head1 SEE ALSO

Regarding the configuration both the daemon and MTA's, refer to 
L<grossd.conf>

Gross project site: L<http://code.google.com/p/gross/>

Bloom filters: L<http://en.wikipedia.org/wiki/Bloom_filter>

DNS queries are done asynchronously using c-ares library
L<http://daniel.haxx.se/projects/c-ares/>.

=head1 AUTHORS

Eino Tuominen L<eino@utu.fi>

Antti Siira L<antti@utu.fi>
