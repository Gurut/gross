=pod

=head1 NAME

B<grossd.conf> - Greylisting of Suspicious Sources daemon configuration file

=head1 SYNOPSIS

F<@sysconfdir@/etc/grossd.conf>

=head1 DESCRIPTION

B<grossd> reads configuration data from F<@sysconfdir@/etc/grossd.conf>
(or the file specified with B<-f> on the command line). 
An example configuration file is installed by default. You have to
set some configuration options in order to get grossd running in 
your environment. The format is as follows:

  name = value [ ; param ] ...

Not all options accept parameters - 
refer to individual descriptions. The comment separator is 
C<#>, everything after it is ignored by the config file parser.

=head2 Network configuration options

=over

=item B<host>

is the address the server should listen for queries. Default is
C<localhost>.

=item B<port>

is the port the server should listen for queries. Default is
C<5525>.

=item B<sync_listen>

is the address to listen for communication with the peer. It
defaults to B<host> setting.

=item B<sync_peer>

is the address of the peer used when running in clustered mode.

=item B<sync_port>

is the tcp port number to listen to and connect to in communication
with the peer. Default is C<5524>.

=item B<status_host>

is the address grossd listens for status queries. Default is C<localhost>.

=item B<status_port>

is the port number grossd listens for status queries. Default is
C<5522>.

=item B<protocol>

activates the server protocols grossd will support. Valid settings are 
C<sjsms>, C<postfix> and C<milter>.

=item B<milter_listen>

is the socket address for the Milter service. The format is
C<proto:port@host>. Refer to Milter documentation for the specifics.

=back

=head2 Core server options

Most probably you can leave these to default settings. If your daily
mail flow exceeds millions a day you may want to tweak 
B<query_timelimit> and/or B<pool_maxthreads>.  If you run grossd in a
server with limited memory you may want to adjust B<filter_bits>. 

=over

=item B<filter_bits>

is the size of the Bloom filter. Size will be 2^B<filter_bits>.
Lowering this value will increase the probability of false matches in each individual
filter. Default is 24. 

=item B<number_buffers>

is the number of filter used in the ring queue. Raising this value will cause
an entry to stay in the server's memory longer. Default is 8.

=item B<rotate_interval>

is the number of seconds between filter rotations. Let
C<N := B<number_buffers>> and C<I := B<rotate_interval>>
An entry will stay in the server's memory for C<N - 0.5 * I>
seconds on average. Defaults to 3600 seconds (one hour).

=item B<update>

is the way server updates the database. Valid options are 
C<grey> and C<always>.  If set to C<grey>, which is the default,
grossd will update the database only if response is
C<STATUS_GREY>.  Setting it to C<always> may reduce the impact on
DNS servers. 

=item B<grey_mask>

is the mask for grossd to use when matching
C<smtp-client-ip> against the database. Default is 24, which makes grossd
to treat addresses like C<a.b.c.d> as C<a.b.c.0>.
Setting B<grey_mask> to 32 makes grossd to require that consecutive
attempts are made from the same C<smtp-client-ip>.

=item B<statefile>

is the full path of the file that the server uses to store
the state information. Default is not to have a statefile. You may
want to configure a B<statefile> especially if you do not configure
replication.

=item B<pidfile>

is the full path of the file grossd writes its pid into.
You can set parameter C<check>, if you want to keep grossd from
starting, should pidfile already exist.

=back

=head2 Query constraints

=over

=item B<grey_delay>

is the time in seconds new triplets are kept on the greylist. Default is 180.

=item B<query_timelimit>

is the query timeout in milliseconds. You may have to adjust this if you
exceed millions of queries a day.

=item B<pool_maxthreads>

is the maximum threadcount per pool. You may have to raise the limit from
the default if you get more than 100 queries per second and/or have slow
DNS servers. Rule of thumb would be to decide how many queries you want
grossd to be able to handle per second, and multiply that with
B<query_timelimit> (in seconds, of course). It defaults to 100.

=back

=head2 Configuring server responses

=over 

=item B<block_threshold>

is the threshold after which grossd sends 
a permanent error to the client. Every check that considers
C<smtp-client-ip> as suspicious returns a value
(check weight).  When sum of these values gets equivalent or
greater than B<block_threshold> grossd sends a
C<STATUS_BLOCK> response. Default is 0 which disables this
functionality.

=item B<block_reason>

is the reason given when client is too suspicious, see
B<block_threshold>. Default is "Bad reputation".

=item B<grey_threshold>

is analogous to B<block_threshold>, except at the threshold grossd
sends a C<STATUS_GREY> response.

=back

=head2 Logging options

=over

=item B<log_method>

is used to choose the logging method. Currently the only implemented
method is C<syslog>, which is the default.

=item B<log_level>

sets the logging verbosity. Possible values in the order of increasing
verbosity are C<error>, C<warning>, C<notice>, C<info> and C<debug>.
B<log_level> defaults to C<info>.

=item B<syslog_facility>

is the facility syslog sends log messages with. It defaults to
C<mail>.

=item B<stat_type>

is the name of the requested statistic. It is of multivalued type. The
valid options are

=over

=item C<full>

log all possible statistics,

=item C<none>

no statistics logging,

=item C<status>

basic set of statistics, 

=item C<since_startup>

basic set since the startup and

=item C<delay>

log processing delay statistics.

=back

Default is C<none>.  Setting both C<none> and C<full>
is undefined.

=item B<stat_interval>

is the number of seconds between status log entries. Default is 3600.

=back

=head2 Configuring checks

=over

=item B<check>

is a multivalued option, that is, you can configure multiple checks by
setting B<check> option multiple times. Currently implemented checks
are C<dnsbl>, C<dnswl>, C<rhsbl> and C<blocker>.
Refer to sections describing the checks below. If you don't configure
any checks grossd will act as a traditional greylisting server.

=item B<dnsbl>

is a DNS domain name of the dnsbl that C<dnsbl> B<check>
will query. There are no defaults, but the default configuration file
lists a few as an example. If you have any locally administrated
block lists take into account that grossd makes all queries as
fully qualified. You may assign different weights for the dnsbl's,
default weight is 1.  Refer to B<grey_threshold> and B<block_threshold>
about the weights. B<dnsbl> is a multivalued option.

=item B<dnswl>

is analogous to B<dnsbl>.  Remember that B<dnswl> is a
I<definitive> check, that is grossd waits for the check to complete
before deciding how to respond. This may cause unwanted latency,
although you can adjust the maximum latency by B<query_timelimit>
option. Highly recommended if you use grossd as a traditional greylister.
This is a multivalued option.

=item B<rhsbl>

is analogous to B<dnsbl>, but the check is made against the right
hand side .Pq right hand side block list of the sender address,
that is the domain part of the address. This is a multivalued option.

=item B<blocker_host>

is the host name of the Sophos blocker server. This is used only if
B<check> = C<blocker> is set.

=item B<blocker_port>

is the TCP port of the Sophos blocker service. Default is 4466.

=item B<blocker_weight>

is the weight of the blocker check. See description of
B<grey_threshold> and B<block_threshold> regarding the weights.

=back

=head2 Sun Java System Messaging Server specific options

You may configure the responses grossd sends over to grosscheck
library. 

=over

=item B<sjsms_response_grey>

is the mapping result template grossd uses for a C<STATUS_GREY>
result. Default is C<$X4.4.3|$NPlease$ try$ again$ later>.

=item B<sjsms_response_match>

is the mapping result template grossd uses for a C<STATUS_MATCH>
result. Default is C<$Y>.

=item B<sjsms_response_trust>

is the mapping result template grossd uses for a
C<STATUS_TRUST> result. Default is C<$Y>.

=item B<sjsms_response_block>

is the mapping result template grossd uses for a
C<STATUS_BLOCK> result. Default is
C<$N%reason%>, where C<%reason%> is the template for the reason
string.

=back

=head1 MTA CONFIGURATION

=head2 Sun Java System Messaging Server

You have to add a mapping entry to set
B<SJSMS> to query grossd. It's also a good idea to exclude
L<postmaster> and L<abuse> addresses before querying grossd.

Here is an example:

  ORIG_MAIL_ACCESS
  
  ! allow all DSNs and MDNs
    TCP|*|*|*|*|*|*|tcp_local||*|*  $Y$E
  ! allow all incoming mail to postmaster and abuse
    TCP|*|*|*|*|*|*|tcp_local|*|*|postmaster@*  $Y$E
    TCP|*|*|*|*|*|*|tcp_local|*|*|abuse@*  $Y$E
  ! use gross to check all triplets (client_ip,sender,recipient)
    TCP|*|*|*|*|SMTP/*|*|tcp_local|*|*|*  $[@libdir@/grosscheck.so,grosscheck,10.10.13.1,10.10.13.2,5525,$2,$=$8$_,$=$6$_,$=$4$_]

Mapping call parameters are as follows:

=over

=item 1.
full path of the C<grosscheck.so>

=item 2.
function name to call (always C<grosscheck>)

=item 3.
first server's IP address,

=item 4.
second server's IP address,

=item 5.
UDP port for server connections,

=item 6.
SMTP client's IP address,

=item 7.
envelope sender's email address,

=item 8.
envelope recipient's email address,

=item 9.
HELO/EHLO string. 

=back

=head2 Postfix

Grossd implements native Postfix policy delegation protocol. Just specify
grossd at the C<smtpd_recipient_restrictions>
in the main configuration file

main.cf :

  /etc/postfix/main.cf:
      smtpd_recipient_restrictions =
          ... 
          reject_unauth_destination 
          check_policy_service inet:host:port
          ...

Refer to Postfix documentation at
L<http://www.postfix.org> for specifics.

=head2 Exim

Exim can be configured to query grossd via
Postfix policy delegation protocol. 

Main section:

  GROSS_QUERY = sender=$sender_address\\n\\
    recipient=$local_part@$domain\\n\\
    client_address=$sender_host_address\\n\\
    grossd_mode=single\\n\\n

Acl section:

  # gross
  warn
    set acl_c0 = ${readsocket{inet:127.0.0.1:5525}{GROSS_QUERY}}
  
  defer
    message = Please try again later.
    condition = ${if match {$acl_c0}{action=defer_if_permit}}
  
  deny
    message = ${if match {$acl_c0}{action=reject (.*)}{$1}\\
      {Rejected by Gross.}}
    condition = ${if match {$acl_c0}{action=reject}} 

=head1 SEE ALSO

grossd(8)

Gross project site:
L<http://code.google.com/p/gross/>

Bloom filters: L<http://en.wikipedia.org/wiki/Bloom_filter>

=head1 AUTHORS

Eino Tuominen and Antti Siira
